const express = require("express");// подключение express
const WebSocketServer = new require('ws');
const fs = require("fs");

//const srn = require("./SaveResultNode");

//----------------------- Запуск обычного HTTP Server ------------------------------------
const exp = express();

exp.get("/", function (request, response) {
    response.sendFile(__dirname + '/index.html');
});

exp.get("/favicon.ico", function(request, response) {
});

exp.get("/*", function (request, response) {
	let arg = request.url;
	if(!(arg.includes('.html') || arg.includes('.htm') || arg.includes('.js') || arg.includes('.ico'))) arg += ".html";
    response.sendFile(__dirname + arg);
});

exp.listen(3000);
//---------------------------------------------------------------------------------------
let archers = { 
" 1 A ":{name:" Евстратов Станислав Юрьевич ", class : " 3Д БЛ (Анлимитед) мужчины (21 год и старше) ", arr:[ [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], ]},
" 1 B ":{name:" Алферов Денис Игоревич ", class : " Спортинг мужчины (21 год и старше) ", arr:[ [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], ]},
" 1 C ":{name:" Кузёма Александр Владимирович ", class : " Спортинг мужчины (21 год и старше) ", arr:[ [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], ]},
" 12 A ":{name:" Семенова Ольга Вячеславовна ", class : " 3Д КЛ (Баребоу) женщины (21 год и старше) ", arr:[ [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], ]},
" 12 B ":{name:" Комаров Андрей Валерьевич ", class : " Олимпик мужчины (21 год и старше) ", arr:[ [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], ]},
" 12 C ":{name:" Базарный Аркадий Николаевич ", class : " 3Д длинный лук (лонгбоу) мужчины (21 год и старше) ", arr:[ [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], ]},
" 3 A ":{name:" Линьков Станислав Игоревич ", class : " Историк мужчины (21 год и старше) ", arr:[ [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], ]},
" 3 B ":{name:" Бойко  Анна  Игоревна  ", class : " Историк женщины (21 год и старше) ", arr:[ [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], ]},
" 3 C ":{name:" Изъюров Сергей Александрович ", class : " 3Д длинный лук (лонгбоу) мужчины (21 год и старше) ", arr:[ [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], ]},
" 4 A ":{name:" Львов Роман Сергеевич ", class : " 3Д составной лук (Инстинктив) мужчины (21 год и старше) ", arr:[ [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], ]},
" 4 B ":{name:" Кротов Сергей Анатольевич ", class : " 3Д длинный лук (лонгбоу) мужчины (21 год и старше) ", arr:[ [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], ]},
" 4 C ":{name:" Озерной Степан Максимович ", class : " 3Д БЛ (Анлимитед) мужчины (21 год и старше) ", arr:[ [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], ]},
" 5 A ":{name:" Полосухин Александр Викторович  ", class : " 3Д БЛ (Анлимитед) мужчины (21 год и старше) ", arr:[ [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], ]},
" 5 B ":{name:" Коробков Владимир Леонидович ", class : " Историк мужчины (21 год и старше) ", arr:[ [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], ]},
" 5 C ":{name:" Коробков Радомир Владимирович ", class : " 3Д длинный лук (лонгбоу) юноши (17 – 14 лет) ", arr:[ [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], ]},
" 6 A ":{name:" Жданов Роман Викторович ", class : " Историк мужчины (21 год и старше) ", arr:[ [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], ]},
" 6 B ":{name:" Александров Игорь Евгеньевич ", class : " 3Д БЛ (Анлимитед) мужчины (21 год и старше) ", arr:[ [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], ]},
" 6 C ":{name:" Ершов Олег Александрович ", class : " 3Д КЛ (Баребоу) мужчины (21 год и старше) ", arr:[ [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], ]},
" 7 A ":{name:" Шарафутдинов Ринат Фагимович ", class : " 3Д составной лук (Инстинктив) мужчины (21 год и старше) ", arr:[ [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], ]},
" 7 B ":{name:" Смирнова Елена Анатольевна ", class : " 3Д длинный лук (лонгбоу) женщины (21 год и старше) ", arr:[ [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], ]},
" 8 A ":{name:" Дьякова Ирина Сергеевна  ", class : " Олимпик женщины (21 год и старше) ", arr:[ [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], ]},
" 8 B ":{name:" Савенкова  Александра Андреевна  ", class : " 3Д БЛ (Анлимитед) женщины (21 год и старше) ", arr:[ [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], ]},
}

const clients = {};// подключённые клиенты
//const tablos = {};// подключённые tablo
let startId = 0;
let data = {};
let groupInfo = {};

try{//Пытаемся прочитать файл с информацией от предыддущего запуска сервера,
	groupInfo = JSON.parse(fs.readFileSync('groupInfo.txt', 'utf8'));
}catch(err){
	let group = "";
	for(let key in archers){
		let l = key.length - 3;
		let thisGroup = key.substring(1,l);
		if(group  != thisGroup){
			group  = thisGroup;
			groupInfo[group] = {};
			groupInfo[group]["firstTarget"] = parseInt(group)
			groupInfo[group]["currTarget"] = parseInt(group)
			groupInfo[group]["clientId"] = "";
		}
	}
	groupInfo['1'].currTarget = 11;
	try{															//записываем новые данные в файл на случай краха
		fs.writeFileSync('groupInfo.txt', JSON.stringify(groupInfo), 'utf8');
		console.log(groupInfo);
	}catch(err){
		console.log('Ошибка записи в файл',err);
	}
};


//let copyData = {};
/*
atn.init(data);
//console.log(data)

function updateData(){
	atn.processing(data);
	let jsonStringfyData = JSON.stringify(data);
	if(jsonStringfyData != copyData){
		copyData = jsonStringfyData;
		atn.updateTablo(jsonStringfyData, tablos);
		//console.log('time='+data.curTime);
	}
}
*/

//----------------------- Запуск WebSoket Server ------------------------------------

const webSocketServer = new WebSocketServer.Server({port: 3001});

webSocketServer.on('connection', function(ws) {
	//startId++
	//const id = startId;
	if(startId > 32766) startId = 0;
	
	console.log("новое соединение:" + ws._socket.remoteAddress);
	ws.send('Hi, client!');

	ws.on('message', function(msg) {
		console.log('получено сообщение ' + msg);//---------------------------------------------checkOut-----------------------------------------------
		
		if(msg.indexOf('Result saver')==0){//если в полученном сообщении есть слово 'Result saver'
			clients[ws._socket.remoteAddress]= ws;			//регистрируем его как получателя информации о смене времени и режима
			//atn.updateTablo(JSON.stringify(data), tablos); //и сразу отправляем текущее состояние
		}else{
		/*
			try{
				let obj = JSON.parse(msg);
				for(key in obj) //смотрим какие поля структуры прислали
					if(data.control == 0 || key =='control') data[key] = obj[key]; //если текущий режим - ожидание (0), записываем любые поля, иначе записываем только команды
				let jsonStringfyData = JSON.stringify(data);					//записываем текущую структу в строку
				if(jsonStringfyData != copyData){								//если она отличается от контрольных данных - значит было изменение
					ws.send(jsonStringfyData);										//отправляем абоненту, от которого прищёл запрос на изменение обновлённые данные
					updateData();													//обновляем контрольные данные
					try{															//записываем новые данные в файл на случай краха
						fs.writeFileSync('data.txt', jsonStringfyData, 'utf8');
						console.log(jsonStringfyData);
					}catch(err){
						console.log('Ошибка записи в файл',err);
					}
				}
			}catch(err){};
		*/
		}
	});

	ws.on('close', function() {
		console.log('3акрыто соединение ' + id);
		delete clients[id];
	});

});
//---------------------------------------------------------------------------------------

console.log("Express in 3000, WebSocket in 3001");



let targets = {
	"1":"3D","2":"3D","3":"3D","4":"3D","5":"3D","6":"3D","7":"3D","8":"3D","9":"3D","10":"3D","11":"3D","12":"3D",
	"13":"Field","14":"Field","15":"Field","16":"Field","17":"Field","18":"Field","19":"Field","20":"Field","21":"Field","22":"Field","23":"Field","24":"Field",
}
